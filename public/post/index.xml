<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Wallace&#39;s DS Blog</title>
    <link>https://jwallblog.netlify.com/post/</link>
    <description>Recent content in Posts on Wallace&#39;s DS Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Powered by [Hugo](http://gohugo.io).</copyright>
    <lastBuildDate>Tue, 17 Oct 2017 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://jwallblog.netlify.com/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Barplots</title>
      <link>https://jwallblog.netlify.com/post/barplots/</link>
      <pubDate>Tue, 17 Oct 2017 00:00:00 +0000</pubDate>
      
      <guid>https://jwallblog.netlify.com/post/barplots/</guid>
      <description>library(Lahman)library(sqldf)library(ggplot2)This is an example of the code we use to make barplots:
#extracting the data---------------query&amp;lt;-&amp;quot;SELECT name, HRFROM TeamsWHERE yearID=1980ORDER BY HR&amp;quot;result&amp;lt;-sqldf(query)result$name&amp;lt;-factor(result$name,levels=result$name)#visualize the data----------------ggplot()+geom_bar(data=result,aes(x=name,y=HR),stat=&amp;#39;identity&amp;#39;,color=&amp;quot;blue&amp;quot;,fill=&amp;#39;white&amp;#39;)+coord_flip()+ylab(&amp;quot;homeruns&amp;quot;)+xlab(&amp;quot;team&amp;quot;)+ggtitle(&amp;quot;1980 Team Homerun Distribution&amp;quot;)</description>
    </item>
    
    <item>
      <title>Histogram</title>
      <link>https://jwallblog.netlify.com/post/histogram/</link>
      <pubDate>Tue, 17 Oct 2017 00:00:00 +0000</pubDate>
      
      <guid>https://jwallblog.netlify.com/post/histogram/</guid>
      <description>library(Lahman)library(sqldf)library(ggplot2)This is an example of the code we use to use to make histograms:
# extracting the data------------------------query&amp;lt;-&amp;quot;SELECT weightFROM Master&amp;quot;result&amp;lt;-sqldf(query)# visualize the data-----------------------------ggplot()+geom_histogram(data=result,aes(x=weight),color=&amp;quot;blue&amp;quot;,fill=&amp;quot;white&amp;quot;,bins=40)+ggtitle(&amp;quot;Body Weight Distribution For Baseball Players&amp;quot;)## Warning: Removed 854 rows containing non-finite values (stat_bin).</description>
    </item>
    
    <item>
      <title>Scatter Plots</title>
      <link>https://jwallblog.netlify.com/post/scatter-plots/</link>
      <pubDate>Tue, 17 Oct 2017 00:00:00 +0000</pubDate>
      
      <guid>https://jwallblog.netlify.com/post/scatter-plots/</guid>
      <description>library(Lahman)library(sqldf)library(ggplot2)This is an example of the code we use to make scatterplots:
query&amp;lt;-&amp;quot;SELECT playerID, sum(HR) AS career_HR,sum(SO) AS career_SOFROM BattingGROUP BY playerIDHAVING sum(HR)&amp;gt;=400&amp;quot;result&amp;lt;-sqldf(query)ggplot()+geom_point(data=result, aes(x=career_SO,y=career_HR), size=4, color=&amp;quot;green&amp;quot;)+ggtitle(&amp;quot;Career Strikeouts vs. Homeruns for Great Hitters&amp;quot;)+xlab(&amp;quot;Career Strikeouts&amp;quot;)+ylab(&amp;quot;Career Homeruns&amp;quot;)</description>
    </item>
    
    <item>
      <title>Time Series</title>
      <link>https://jwallblog.netlify.com/post/time-series/</link>
      <pubDate>Tue, 17 Oct 2017 00:00:00 +0000</pubDate>
      
      <guid>https://jwallblog.netlify.com/post/time-series/</guid>
      <description>library(Lahman)library(sqldf)library(ggplot2)This is an example of the code we use to make a Time Series:
# extract the data----------------------------query&amp;lt;-&amp;quot;SELECT yearID, HRFROM BattingWHERE playerID=&amp;#39;ruthba01&amp;#39;&amp;quot;result&amp;lt;-sqldf(query)ggplot()+geom_point(data=result,aes(x=yearID,y=HR))+geom_line(data=result,aes(x=yearID,y=HR))+ggtitle(&amp;quot;Ruth&amp;#39;s Homerun Totals Throughout the Years&amp;quot;)+xlab(&amp;quot;Year&amp;quot;)+ylab(&amp;quot;Homeruns&amp;quot;)</description>
    </item>
    
  </channel>
</rss>